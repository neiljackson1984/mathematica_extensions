(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(*this is designed to be passed to to Sort[] as the sorting function*)
multicolumnsortingfunction[sortorder_][a_,b_] := 
Block[
{result = ConstantArray[True,Length[sortorder]],j},
result[[1]] = OrderedQ[{a[[sortorder[[1]]]],b[[sortorder[[1]]]]}];
j=2;

While[
j<= Length[sortorder]
&&a[[ sortorder[[j-1]] ]] == b[[ sortorder[[j-1]] ]],
result[[j]]=OrderedQ[{a[[sortorder[[j]]]],b[[sortorder[[j]]]]}];
j++;
];
Return[And@@result];
];

(*this is almost the same as multicolumnsortingfunction, except, now, sortorder is a list of positions (arbitrary, not just first-level indices) which are to be checked and sorted by.
For instance sortorder might be {{1},{2},{3}}, which would give the same results as multicolumnsortingfunction[{1,2,3}]

AllI've done is replace argument[[sortorder[[dummy]]]] with argument[[Sequence@@sortorder[[dummy]]]]

I could probably get this function to accept a list of column entries and completely serve all the purposes of the multicolumnsortingfunction.
*)
Clear[multipartsortingfunction];
multipartsortingfunction[sortorder_] [a_,b_] :=
Block[
{result = ConstantArray[True,Length[sortorder]],j},
result[[1]] = OrderedQ[{a[[Sequence@@sortorder[[1]]]],b[[Sequence@@sortorder[[1]]]]}];
j=2;

While[
j<= Length[sortorder]
&&a[[ Sequence@@sortorder[[j-1]] ]] == b[[ Sequence@@sortorder[[j-1]] ]],
result[[j]]=OrderedQ[{a[[Sequence@@sortorder[[j]]]],b[[Sequence@@sortorder[[j]]]]}];
j++;
];
Return[And@@result];
];
