(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)




computedata[] :=
Block[
{columnindex,rowindex,namecolumnnumber,sourcecolumnnumber,valuecolumnnumber},




data = Import[pathofdata][[1]];
computeddata = data;

namecolumnnumber = Position[data[[1]],"name of variable"][[1,1]];
sourcecolumnnumber =  Position[data[[1]],"source of variable"][[1,1]];
valuecolumnnumber =  Position[data[[1]],"configuration 1"][[1,1]];


For[
columnindex=valuecolumnnumber,
columnindex<= Length[data[[1]]],
columnindex++,

For[
rowindex=2,
rowindex<= Length[data],
rowindex++ ,
If[
!(data[[rowindex, sourcecolumnnumber]] == "" &&  data[[rowindex, columnindex]] == ""),
ToExpression[
data[[rowindex,namecolumnnumber]] <> ":= " <> 
If[
data[[rowindex,sourcecolumnnumber]] == "",
data[[rowindex,columnindex]],
data[[rowindex,sourcecolumnnumber]]
]
];
];



];

(*at this point, all the variables are properly defined, now we will run through the row again and replace every entry with whatever its corresponding variable evaluates to*)

For[
rowindex=2,
rowindex<= Length[data],
rowindex ++,
computeddata[[rowindex,columnindex]] = 
ToString[
NumberForm[
N[
ToExpression[data[[rowindex,namecolumnnumber]]]
],
{Infinity,10}
]
];
];

];

(*this sorts computed data by variable name*)
computeddatasorted = 
Take[computeddata,1] ~Join~ SortBy[
Take[
computeddata,
-Length[computeddata]+1
],
#[[namecolumnnumber]]&
] ;

Export[pathofcomputeddata,computeddata];
Export[
cadhelperdirectory <> "pathofcomputeddata.xml",

StringJoin[
"<?xml version='1.0'?>",
"<list><string escaped=\"false\">",
pathofcomputeddata,
"</string><string escaped=\"true\">",
StringReplace[pathofcomputeddata,"\\" -> "\\\\"],
"</string></list>"
],

"Text"
]

];


displaydata[] := Print[computeddata //Grid[#,Alignment -> Left, Frame -> All,ItemSize->30] & ];



